head	1.2;
access;
symbols;
locks
	beebe:1.2; strict;
comment	@ * @;


1.2
date	2004.10.31.00.11.04;	author beebe;	state Exp;
branches;
next	1.1;

1.1
date	2004.10.30.21.11.14;	author beebe;	state Exp;
branches;
next	;


desc
@Original version.
@


1.2
log
@Major update for version 1.3.64x to support 64-bit architectures.
@
text
@/**************************************************************************
 *
 * bitio_gen.c -- General supoport routines for bitio
 * Copyright (C) 1994  Neil Sharman and Alistair Moffat
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 *
 * $Id: bitio_gen.c,v 1.1 2004/10/30 21:11:14 beebe Exp beebe $
 *
 **************************************************************************/

/*
   $Log: bitio_gen.c,v $
   Revision 1.1  2004/10/30 21:11:14  beebe
   Initial revision

   * Revision 1.1  1994/08/22  00:24:38  tes
   * Initial placement under CVS.
   *
 */

static char *RCSID = "$Id: bitio_gen.c,v 1.1 2004/10/30 21:11:14 beebe Exp beebe $";

#include "sysfuncs.h"
#include "bitio_m.h"




int fprintf (FILE *, const char *,...);

MG_u_long_t 
BIO_Unary_Length (MG_u_long_t val)
{
  register MG_u_long_t num;
  UNARY_LENGTH (val, num);
  return (num);
}


MG_u_long_t 
BIO_Binary_Length (MG_u_long_t val, MG_u_long_t b)
{
  register MG_u_long_t num;
  BINARY_LENGTH (val, b, num);
  return (num);
}


MG_u_long_t 
BIO_Gamma_Length (MG_u_long_t val)
{
  register MG_u_long_t num;
  GAMMA_LENGTH (val, num);
  return (num);
}


MG_u_long_t 
BIO_Delta_Length (MG_u_long_t val)
{
  register MG_u_long_t num;
  DELTA_LENGTH (val, num);
  return (num);
}


MG_u_long_t 
BIO_Elias_Length (MG_u_long_t val, MG_u_long_t b, double s)
{
  register MG_u_long_t num;
  ELIAS_LENGTH (val, b, s, num);
  return (num);
}

MG_u_long_t 
BIO_Bblock_Length (MG_u_long_t val, MG_u_long_t b)
{
  register MG_u_long_t num;
  BBLOCK_LENGTH (val, b, num);
  return (num);
}


int 
BIO_Bblock_Init (int N, int p)
{
  int b;
  b = (int) (0.5 + 0.6931471 * N / p);
  return (b ? b : 1);
}


int 
BIO_Bblock_Init_W (int N, int p)
{
  int logb;
  FLOORLOG_2 ((N - p) / p, logb);
  return (logb < 0 ? 1 : (1 << logb));
}

int 
BIO_Bblock_Bound_b (int N, int p, int b)
{
  int clogb;
  CEILLOG_2 (b, clogb);
  return (p * (1 + clogb) + (N - p * ((1 << clogb) - b + 1)) / b);
}

int 
BIO_Bblock_Bound (int N, int p)
{
  int b;
  b = BIO_Bblock_Init_W (N, p);
  return (BIO_Bblock_Bound_b (N, p, b));
}

int 
BIO_Gamma_Bound (int N, int p)
{
  return ((int) (p * (2 * log2 ((double) N / p) + 1)));
}

int 
floorlog_2 (int b)
{
  int logb;
  FLOORLOG_2 (b, logb);
  return logb;
}

int 
ceillog_2 (int b)
{
  int logb;
  CEILLOG_2 (b, logb);
  return logb;
}
@


1.1
log
@Initial revision
@
text
@d20 1
a20 1
 * $Id: bitio_gen.c,v 1.1 1994/08/22 00:24:38 tes Exp $
d26 3
d34 1
a34 1
static char *RCSID = "$Id: bitio_gen.c,v 1.1 1994/08/22 00:24:38 tes Exp $";
d44 2
a45 2
unsigned long 
BIO_Unary_Length (unsigned long val)
d47 1
a47 1
  register unsigned long num;
d53 2
a54 2
unsigned long 
BIO_Binary_Length (unsigned long val, unsigned long b)
d56 1
a56 1
  register unsigned long num;
d62 2
a63 2
unsigned long 
BIO_Gamma_Length (unsigned long val)
d65 1
a65 1
  register unsigned long num;
d71 2
a72 2
unsigned long 
BIO_Delta_Length (unsigned long val)
d74 1
a74 1
  register unsigned long num;
d80 2
a81 2
unsigned long 
BIO_Elias_Length (unsigned long val, unsigned long b, double s)
d83 1
a83 1
  register unsigned long num;
d88 2
a89 2
unsigned long 
BIO_Bblock_Length (unsigned long val, unsigned long b)
d91 1
a91 1
  register unsigned long num;
@
